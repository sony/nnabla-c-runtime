# Copyright 2021 Sony Group Corporation.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# DO NOT EDIT THIS FILE BY HAND
# THIS FILE IS GENERATED FROM NNABLA.
#

Neural Network Layer:
  Affine:
    snake_name: affine
    inputs:
      x: {}
      weight:
        parameter: true
      bias:
        optional: true
        parameter: true
    arguments:
      base_axis:
        type: int64
        default: '1'
    outputs:
      y: {}
    function_ids:
      i: 0
    c_runtime: support
    uniq_name: Affine_i
    id: 0
    func_type:
    - ALL
  RNN:
    snake_name: rnn
    inputs:
      x: {}
      h: {}
      weight_l0:
        parameter: true
      weight:
        optional: true
        parameter: true
      bias:
        optional: true
        parameter: true
    arguments:
      num_layers:
        type: int64
        default: '1'
      nonlinearity:
        type: string
        available_values:
        - tanh
        - relu
        default: '''tanh'''
      dropout:
        type: float
        default: 0.0
      bidirectional:
        type: bool
        default: 'False'
      training:
        type: bool
        default: 'True'
    outputs:
      y: {}
      h_n: {}
    function_ids:
      iifBB: 244
    c_runtime: not support
    uniq_name: RNN_iifBB
    id: 244
    func_type:
    - ALL
  LSTM:
    snake_name: lstm
    inputs:
      x: {}
      h: {}
      c: {}
      weight_l0:
        parameter: true
      weight:
        optional: true
        parameter: true
      bias:
        optional: true
        parameter: true
    arguments:
      num_layers:
        type: int64
        default: '1'
      dropout:
        type: float
        default: 0.0
      bidirectional:
        type: bool
        default: 'False'
      training:
        type: bool
        default: 'True'
    outputs:
      y: {}
      h_n: {}
      c_n: {}
    function_ids:
      ifBB: 242
    c_runtime: not support
    uniq_name: LSTM_ifBB
    id: 242
    func_type:
    - ALL
  GRU:
    snake_name: gru
    inputs:
      x: {}
      h: {}
      weight_l0:
        parameter: true
      weight:
        optional: true
        parameter: true
      bias:
        optional: true
        parameter: true
    arguments:
      num_layers:
        type: int64
        default: '1'
      dropout:
        type: float
        default: 0.0
      bidirectional:
        type: bool
        default: 'False'
      training:
        type: bool
        default: 'True'
    outputs:
      y: {}
      h_n: {}
    function_ids:
      ifBB: 243
    c_runtime: not support
    uniq_name: GRU_ifBB
    id: 243
    func_type:
    - ALL
  Convolution:
    snake_name: convolution
    inputs:
      x: {}
      weight:
        parameter: true
      bias:
        optional: true
        parameter: true
    arguments:
      base_axis:
        type: int64
        default: '1'
      pad:
        type: Shape
        default: (0,) * (len(x.shape) - (base_axis+1))
      stride:
        type: Shape
        default: (1,) * (len(x.shape) - (base_axis+1))
      dilation:
        type: Shape
        default: (1,) * (len(x.shape) - (base_axis+1))
      group:
        type: int64
        default: '1'
      channel_last:
        type: bool
        default: 'False'
    outputs:
      y: {}
    function_ids:
      iiIiIiIi: 1
      iiIiIiIiB: 265
    c_runtime: support
    uniq_name: Convolution_iiIiIiIiB
    id: 265
    func_type:
    - ALL
  FusedConvolution:
    snake_name: fused_convolution
    inputs:
      x: {}
      weight:
        parameter: true
      bias:
        optional: true
        parameter: true
      beta:
        optional: true
        parameter: true
      gamma:
        optional: true
        parameter: true
      mean:
        optional: true
      variance:
        optional: true
      z:
        optional: true
    arguments:
      base_axis:
        type: int64
        default: '1'
      pad:
        type: Shape
        default: (0,) * (len(x.shape) - (base_axis+1))
      stride:
        type: Shape
        default: (1,) * (len(x.shape) - (base_axis+1))
      dilation:
        type: Shape
        default: (1,) * (len(x.shape) - (base_axis+1))
      group:
        type: int64
        default: '1'
      channel_last:
        type: bool
        default: 'False'
      decay_rate:
        type: float
        default: '0.9'
      eps:
        type: float
        default: 1e-05
      batch_stat:
        type: bool
        default: 'True'
      nonlinearity:
        type: string
        available_values:
        - identity
        - relu
        - sigmoid
        - tanh
        - leaky_relu
        - elu
        - relu6
        default: '''relu'''
      nonlinearity_args:
        type: repeated float
        default: list()
      pad_mode:
        type: string
        available_values:
        - constant
        - reflect
        - repeat
        default: '''constant'''
      constant_value:
        type: float
        default: '0'
    outputs:
      y: {}
    c_runtime: not support
    function_ids:
      iiIiIiIiBffBifF: 295
      iiIiIiIiBffBifFif: 346
    uniq_name: FusedConvolution_iiIiIiIiBffBifFif
    id: 346
    func_type:
    - ALL
  DepthwiseConvolution:
    snake_name: depthwise_convolution
    inputs:
      x: {}
      weight:
        parameter: true
      bias:
        optional: true
        parameter: true
    arguments:
      base_axis:
        type: int64
        default: '1'
      pad:
        type: Shape
        default: (0,) * (len(x.shape) - (base_axis+1))
      stride:
        type: Shape
        default: (1,) * (len(x.shape) - (base_axis+1))
      dilation:
        type: Shape
        default: (1,) * (len(x.shape) - (base_axis+1))
      multiplier:
        type: int64
        default: '1'
    outputs:
      y: {}
    function_ids:
      iiIiIiIi: 2
    c_runtime: support
    uniq_name: DepthwiseConvolution_iiIiIiIi
    id: 2
    func_type:
    - ALL
  Deconvolution:
    snake_name: deconvolution
    inputs:
      x: {}
      weight:
        parameter: true
      bias:
        optional: true
        parameter: true
    arguments:
      base_axis:
        type: int64
        default: '1'
      pad:
        type: Shape
        default: (0,) * (len(x.shape) - (base_axis+1))
      stride:
        type: Shape
        default: (1,) * (len(x.shape) - (base_axis+1))
      dilation:
        type: Shape
        default: (1,) * (len(x.shape) - (base_axis+1))
      group:
        type: int64
        default: '1'
      channel_last:
        type: bool
        default: 'False'
      output_padding:
        type: Shape
        default: (0,) * (len(x.shape) - (base_axis+1))
    outputs:
      y: {}
    function_ids:
      iiIiIiIi: 3
      iiIiIiIiB: 279
      iiIiIiIiBiI: 292
    c_runtime: support
    uniq_name: Deconvolution_iiIiIiIiBiI
    id: 292
    func_type:
    - ALL
  DepthwiseDeconvolution:
    snake_name: depthwise_deconvolution
    inputs:
      x: {}
      weight:
        parameter: true
      bias:
        optional: true
        parameter: true
    arguments:
      base_axis:
        type: int64
        default: '1'
      pad:
        type: Shape
        default: (0,) * (len(x.shape) - (base_axis+1))
      stride:
        type: Shape
        default: (1,) * (len(x.shape) - (base_axis+1))
      dilation:
        type: Shape
        default: (1,) * (len(x.shape) - (base_axis+1))
      divisor:
        type: int64
        default: '1'
    outputs:
      y: {}
    function_ids:
      iiIiIiIi: 4
    c_runtime: not support
    uniq_name: DepthwiseDeconvolution_iiIiIiIi
    id: 4
    func_type:
    - ALL
  DeformableConvolution:
    snake_name: deformable_convolution
    inputs:
      x: {}
      weight:
        parameter: true
      offset: {}
      mask:
        optional: true
      bias:
        optional: true
        parameter: true
    arguments:
      base_axis:
        type: int64
        default: '1'
      pad:
        type: Shape
        default: (0,) * (len(x.shape) - (base_axis+1))
      stride:
        type: Shape
        default: (1,) * (len(x.shape) - (base_axis+1))
      dilation:
        type: Shape
        default: (1,) * (len(x.shape) - (base_axis+1))
      group:
        type: int64
        default: '1'
      deformable_group:
        type: int64
        default: '1'
      channel_last:
        type: bool
        default: 'False'
    outputs:
      y: {}
    c_runtime: not support
    function_ids:
      iiIiIiIiiB: 329
    uniq_name: DeformableConvolution_iiIiIiIiiB
    id: 329
    func_type:
    - ALL
  AdaptiveSeparableConvolution:
    snake_name: adaptive_separable_convolution
    inputs:
      x: {}
      vertical_kernel: {}
      horizontal_kernel: {}
    outputs:
      y: {}
    c_runtime: not support
    function_ids:
      Empty: 278
    uniq_name: AdaptiveSeparableConvolution
    id: 278
    func_type:
    - ALL
  MaxPooling:
    snake_name: max_pooling
    inputs:
      x: {}
    arguments:
      kernel:
        type: Shape
      stride:
        type: Shape
        default: kernel
      ignore_border:
        type: bool
        default: 'True'
      pad:
        type: Shape
        default: (0,) * len(kernel)
      channel_last:
        type: bool
        default: 'False'
    outputs:
      y: {}
    function_ids:
      iIiIBiI: 5
      iIiIBiIB: 266
    c_runtime: support
    uniq_name: MaxPooling_iIiIBiIB
    id: 266
    func_type:
    - ALL
  AveragePooling:
    snake_name: average_pooling
    inputs:
      x: {}
    arguments:
      kernel:
        type: Shape
      stride:
        type: Shape
        default: kernel
      ignore_border:
        type: bool
        default: 'True'
      pad:
        type: Shape
        default: (0,) * len(kernel)
      channel_last:
        type: bool
        default: 'False'
      including_pad:
        type: bool
        default: 'True'
    outputs:
      y: {}
    function_ids:
      iIiIBiIB: 6
      iIiIBiIBB: 267
    c_runtime: support
    uniq_name: AveragePooling_iIiIBiIBB
    id: 267
    func_type:
    - ALL
  GlobalAveragePooling:
    snake_name: global_average_pooling
    inputs:
      x: {}
    outputs:
      y: {}
    function_ids:
      Empty: 7
    c_runtime: not support
    uniq_name: GlobalAveragePooling
    id: 7
    func_type:
    - ALL
  SumPooling:
    snake_name: sum_pooling
    inputs:
      x: {}
    arguments:
      kernel:
        type: Shape
      stride:
        type: Shape
        default: kernel
      ignore_border:
        type: bool
        default: 'True'
      pad:
        type: Shape
        default: (0,) * len(kernel)
      channel_last:
        type: bool
        default: 'False'
    outputs:
      y: {}
    function_ids:
      iIiIBiI: 8
      iIiIBiIB: 268
    c_runtime: support
    uniq_name: SumPooling_iIiIBiIB
    id: 268
    func_type:
    - ALL
  Unpooling:
    snake_name: unpooling
    inputs:
      x: {}
    arguments:
      kernel:
        type: Shape
      channel_last:
        type: bool
        default: 'False'
    outputs:
      y: {}
    function_ids:
      iI: 9
      iIB: 287
    c_runtime: support
    uniq_name: Unpooling_iIB
    id: 287
    func_type:
    - ALL
  Embed:
    snake_name: embed
    inputs:
      x0:
        template: TI
      w:
        parameter: true
    outputs:
      y: {}
    function_ids:
      Empty: 10
    c_runtime: not support
    uniq_name: Embed
    id: 10
    func_type:
    - ALL
  RoiAlign:
    snake_name: roi_align
    inputs:
      input: {}
      boxes: {}
    arguments:
      output_size:
        type: Shape
      spatial_scale:
        type: repeated float
        default: (1.0, 1.0)
      sampling_ratio:
        type: int64
        default: -1
      channel_last:
        type: bool
        default: false
    outputs:
      y: {}
    c_runtime: not support
    function_ids:
      iIfFiB: 338
    uniq_name: RoiAlign_iIfFiB
    id: 338
    func_type:
    - ALL
Neural Network Activation Functions:
  Sigmoid:
    snake_name: sigmoid
    inputs:
      x: {}
    outputs:
      y: {}
    function_ids:
      Empty: 11
    c_runtime: support
    uniq_name: Sigmoid
    id: 11
    func_type:
    - ALL
  Swish:
    snake_name: swish
    inputs:
      x: {}
    outputs:
      y: {}
    function_ids:
      Empty: 12
    c_runtime: support
    uniq_name: Swish
    id: 12
    func_type:
    - ALL
  Tanh:
    snake_name: tanh
    inputs:
      x: {}
    outputs:
      y: {}
    function_ids:
      Empty: 13
    c_runtime: support
    uniq_name: Tanh
    id: 13
    func_type:
    - ALL
  ReLU:
    snake_name: relu
    inputs:
      x: {}
    arguments:
      inplace:
        type: bool
        default: 'False'
    outputs:
      y: {}
    function_ids:
      B: 14
    c_runtime: support
    uniq_name: ReLU_B
    id: 14
    func_type:
    - ALL
  LeakyReLU:
    snake_name: leaky_relu
    inputs:
      x: {}
    arguments:
      alpha:
        type: float
        default: '0.1'
      inplace:
        type: bool
        default: 'False'
    outputs:
      y: {}
    function_ids:
      f: 15
      fB: 128
    c_runtime: support
    uniq_name: LeakyReLU_fB
    id: 128
    func_type:
    - ALL
  Softmax:
    snake_name: softmax
    inputs:
      x: {}
    arguments:
      axis:
        type: int64
        default: len(x.shape) - 1
    outputs:
      y: {}
    function_ids:
      i: 16
    c_runtime: support
    uniq_name: Softmax_i
    id: 16
    func_type:
    - ALL
  LogSoftmax:
    snake_name: log_softmax
    inputs:
      x: {}
    arguments:
      axis:
        type: int64
        default: len(x.shape) - 1
    outputs:
      y: {}
    c_runtime: not support
    function_ids:
      i: 269
    uniq_name: LogSoftmax_i
    id: 269
    func_type:
    - ALL
  ELU:
    snake_name: elu
    inputs:
      x: {}
    arguments:
      alpha:
        type: double
        default: '1.0'
    outputs:
      y: {}
    function_ids:
      f: 17
    c_runtime: support
    uniq_name: ELU_f
    id: 17
    func_type:
    - ALL
  SELU:
    snake_name: selu
    inputs:
      x: {}
    arguments:
      scale:
        type: double
        default: '1.05070098735548'
      alpha:
        type: double
        default: '1.673263242354377'
    outputs:
      y: {}
    function_ids:
      ff: 18
    c_runtime: support
    uniq_name: SELU_ff
    id: 18
    func_type:
    - ALL
  CReLU:
    snake_name: crelu
    inputs:
      x: {}
    arguments:
      axis:
        type: int64
        default: '1'
    outputs:
      y: {}
    function_ids:
      i: 19
    c_runtime: support
    uniq_name: CReLU_i
    id: 19
    func_type:
    - ALL
  CELU:
    snake_name: celu
    inputs:
      x: {}
    arguments:
      alpha:
        type: double
        default: '1.0'
      axis:
        type: int64
        default: '1'
    outputs:
      y: {}
    function_ids:
      fi: 20
    c_runtime: support
    uniq_name: CELU_fi
    id: 20
    func_type:
    - ALL
  PReLU:
    snake_name: prelu
    inputs:
      x0: {}
      x1: {}
    arguments:
      base_axis:
        type: int64
        default: '1'
    outputs:
      y: {}
    function_ids:
      i: 21
    c_runtime: support
    uniq_name: PReLU_i
    id: 21
    func_type:
    - ALL
  GELU:
    snake_name: gelu
    inputs:
      x: {}
    outputs:
      y: {}
    function_ids:
      Empty: 245
    c_runtime: not support
    uniq_name: GELU
    id: 245
    func_type:
    - ALL
  Mish:
    snake_name: mish
    inputs:
      x: {}
    outputs:
      y: {}
    c_runtime: not support
    function_ids:
      Empty: 298
    uniq_name: Mish
    id: 298
    func_type:
    - ALL
  ReLU6:
    snake_name: relu6
    inputs:
      x: {}
    outputs:
      y: {}
    c_runtime: not support
    function_ids:
      Empty: 256
    uniq_name: ReLU6
    id: 256
    func_type:
    - ALL
  HardSigmoid:
    snake_name: hard_sigmoid
    inputs:
      x: {}
    outputs:
      y: {}
    c_runtime: not support
    function_ids:
      Empty: 249
      ff: 259
    uniq_name: HardSigmoid
    id: 259
    func_type:
    - ALL
  HardTanh:
    snake_name: hard_tanh
    inputs:
      x: {}
    outputs:
      y: {}
    c_runtime: not support
    function_ids:
      ii: 250
      ff: 260
      Empty: 261
    uniq_name: HardTanh
    id: 261
    func_type:
    - ALL
  LogSigmoid:
    snake_name: log_sigmoid
    inputs:
      x: {}
    outputs:
      y: {}
    c_runtime: not support
    function_ids:
      Empty: 251
    uniq_name: LogSigmoid
    id: 251
    func_type:
    - ALL
  SoftPlus:
    snake_name: softplus
    inputs:
      x: {}
    arguments:
      beta:
        type: double
        default: '1.0'
    outputs:
      y: {}
    c_runtime: not support
    function_ids:
      ii: 252
      Empty: 262
      f: 335
    uniq_name: SoftPlus_f
    id: 335
    func_type:
    - ALL
  SoftSign:
    snake_name: softsign
    inputs:
      x: {}
    outputs:
      y: {}
    c_runtime: not support
    function_ids:
      Empty: 253
    uniq_name: SoftSign
    id: 253
    func_type:
    - ALL
  TanhShrink:
    snake_name: tanh_shrink
    inputs:
      x: {}
    outputs:
      y: {}
    c_runtime: not support
    function_ids:
      Empty: 254
    uniq_name: TanhShrink
    id: 254
    func_type:
    - ALL
  Sinc:
    snake_name: sinc
    inputs:
      x: {}
    outputs:
      y: {}
    c_runtime: not support
    function_ids:
      Empty: 255
    uniq_name: Sinc
    id: 255
    func_type:
    - ALL
Normalization:
  FusedBatchNormalization:
    snake_name: fused_batch_normalization
    inputs:
      x: {}
      beta: {}
      gamma: {}
      mean: {}
      variance: {}
      z:
        optional: true
    arguments:
      axes:
        type: repeated int64
        default: (1,)
      decay_rate:
        type: float
        default: '0.9'
      eps:
        type: float
        default: 1e-05
      batch_stat:
        type: bool
        default: 'True'
      nonlinearity:
        type: string
        available_values:
        - relu
        default: '''relu'''
    outputs:
      y: {}
    c_runtime: not support
    function_ids:
      iIffBi: 270
    uniq_name: FusedBatchNormalization_iIffBi
    id: 270
    func_type:
    - ALL
  BatchNormalization:
    snake_name: batch_normalization
    inputs:
      x: {}
      beta:
        optional: true
      gamma:
        optional: true
      mean:
        optional: true
      variance:
        optional: true
    arguments:
      axes:
        type: repeated int64
        default: (1,)
      decay_rate:
        type: float
        default: '0.9'
      eps:
        type: float
        default: 1e-05
      batch_stat:
        type: bool
        default: 'True'
      no_scale:
        type: bool
        default: 'False'
      no_bias:
        type: bool
        default: 'False'
    outputs:
      y: {}
    function_ids:
      iIffB: 22
      iIffBBB: 326
    c_runtime: support
    uniq_name: BatchNormalization_iIffBBB
    id: 326
    func_type:
    - ALL
  GroupNormalization:
    snake_name: group_normalization
    inputs:
      x: {}
      beta:
        optional: true
      gamma:
        optional: true
    arguments:
      num_groups:
        type: int64
        default: 1
      channel_axis:
        type: int64
        default: 1
      batch_axis:
        type: repeated int64
        default: (0,)
      eps:
        type: float
        default: 1e-05
      no_scale:
        type: bool
        default: 'False'
      no_bias:
        type: bool
        default: 'False'
    outputs:
      y: {}
    c_runtime: not support
    function_ids:
      iiiIfBB: 321
    uniq_name: GroupNormalization_iiiIfBB
    id: 321
    func_type:
    - ALL
  InstanceNormalization:
    snake_name: instance_normalization
    inputs:
      x: {}
      beta:
        optional: true
      gamma:
        optional: true
    arguments:
      channel_axis:
        type: int64
        default: 1
      batch_axis:
        type: repeated int64
        default: (0,)
      eps:
        type: float
        default: 1e-05
      no_scale:
        type: bool
        default: 'False'
      no_bias:
        type: bool
        default: 'False'
    outputs:
      y: {}
    c_runtime: not support
    function_ids:
      iiIfBB: 322
    uniq_name: InstanceNormalization_iiIfBB
    id: 322
    func_type:
    - ALL
  LayerNormalization:
    snake_name: layer_normalization
    inputs:
      x: {}
      beta:
        optional: true
      gamma:
        optional: true
    arguments:
      batch_axis:
        type: repeated int64
        default: (0,)
      eps:
        type: float
        default: 1e-05
      no_scale:
        type: bool
        default: 'False'
      no_bias:
        type: bool
        default: 'False'
    outputs:
      y: {}
    c_runtime: not support
    function_ids:
      iIfBB: 323
    uniq_name: LayerNormalization_iIfBB
    id: 323
    func_type:
    - ALL
  NormNormalization:
    snake_name: norm_normalization
    inputs:
      x: {}
    arguments:
      p:
        type: float
        default: 2
      axes:
        type: repeated int64
        default: range(x.ndim)
      eps:
        type: float
        default: 1e-12
    outputs:
      y: {}
    c_runtime: not support
    function_ids:
      fiIf: 317
    uniq_name: NormNormalization_fiIf
    id: 317
    func_type:
    - ALL
  SyncBatchNormalization:
    snake_name: sync_batch_normalization
    inputs:
      x: {}
      beta: {}
      gamma: {}
      mean: {}
      variance: {}
    arguments:
      comm:
        type: Communicator
      group:
        type: string
        available_values:
        - world
        default: world
      axes:
        type: repeated int64
        default: (1,)
      decay_rate:
        type: float
        default: '0.9'
      eps:
        type: float
        default: 1e-05
      batch_stat:
        type: bool
        default: 'True'
    outputs:
      y: {}
    c_runtime: not support
    function_ids:
      CiiIffB: 263
    uniq_name: SyncBatchNormalization_CiiIffB
    id: 263
    func_type:
    - ALL
  TensorNormalization:
    snake_name: tensor_normalization
    inputs:
      x: {}
      beta:
        optional: true
      gamma:
        optional: true
    arguments:
      axes:
        type: repeated int64
        default: (1,)
      eps:
        type: float
        default: 1e-05
      no_scale:
        type: bool
        default: 'False'
      no_bias:
        type: bool
        default: 'False'
    outputs:
      y: {}
    c_runtime: support
    function_ids:
      iIfBB: 324
    uniq_name: TensorNormalization_iIfBB
    id: 324
    func_type:
    - ALL
  WeightNormalization:
    snake_name: weight_normalization
    inputs:
      w: {}
      g: {}
    arguments:
      dim:
        type: int64
        default: '0'
      eps:
        type: float
        default: 1e-12
    outputs:
      w_wn: {}
    c_runtime: not support
    function_ids:
      if: 304
    uniq_name: WeightNormalization_if
    id: 304
    func_type:
    - ALL
  WeightStandardization:
    snake_name: weight_standardization
    inputs:
      w: {}
    arguments:
      channel_axis:
        type: int64
        default: 0
      eps:
        type: float
        default: 1e-05
    outputs:
      y: {}
    c_runtime: not support
    function_ids:
      if: 325
    uniq_name: WeightStandardization_if
    id: 325
    func_type:
    - ALL
  SpectralNorm:
    snake_name: spectral_norm
    inputs:
      w: {}
      u: {}
    arguments:
      dim:
        type: int64
        default: '0'
      itr:
        type: int64
        default: '1'
      eps:
        type: float
        default: 1e-12
      test:
        type: bool
        default: 'False'
      output_u:
        type: bool
        default: 'False'
    outputs:
      w_sn: {}
    c_runtime: not support
    function_ids:
      iifB: 330
      iifBB: 337
    uniq_name: SpectralNorm_iifBB
    id: 337
    func_type:
    - ALL
  MeanSubtraction:
    snake_name: mean_subtraction
    inputs:
      x: {}
      rmean: {}
      t: {}
    arguments:
      base_axis:
        type: int64
        default: '1'
      update_running_mean:
        type: bool
        default: 'True'
    outputs:
      y: {}
    function_ids:
      iB: 23
    c_runtime: support
    uniq_name: MeanSubtraction_iB
    id: 23
    func_type:
    - ALL
  ClipGradByValue:
    snake_name: clip_grad_by_value
    inputs:
      x: {}
      min: {}
      max: {}
    outputs:
      y: {}
    function_ids:
      Empty: 121
    c_runtime: not support
    uniq_name: ClipGradByValue
    id: 121
    func_type:
    - ALL
  ClipGradByNorm:
    snake_name: clip_grad_by_norm
    inputs:
      x: {}
    arguments:
      clip_norm:
        type: float
        default: 1.0
      axes:
        type: repeated int64
        default: range(x.ndim)
    outputs:
      y: {}
    function_ids:
      fiI: 122
    c_runtime: not support
    uniq_name: ClipGradByNorm_fiI
    id: 122
    func_type:
    - ALL
Reduction:
  Sum:
    snake_name: sum
    inputs:
      x: {}
    arguments:
      axes:
        type: repeated int64
        default: range(x.ndim)
      keep_dims:
        type: bool
        default: 'False'
    outputs:
      y: {}
    function_ids:
      iIB: 24
    c_runtime: support
    uniq_name: Sum_iIB
    id: 24
    func_type:
    - ALL
  CumSum:
    snake_name: cumsum
    inputs:
      x: {}
    arguments:
      axis:
        type: int64
        default: 0
      exclusive:
        type: bool
        default: 'False'
      reverse:
        type: bool
        default: 'False'
    outputs:
      y: {}
    c_runtime: not support
    function_ids:
      iBB: 331
    uniq_name: CumSum_iBB
    id: 331
    func_type:
    - ALL
  Mean:
    snake_name: mean
    inputs:
      x: {}
    arguments:
      axes:
        type: repeated int64
        default: range(x.ndim)
      keep_dims:
        type: bool
        default: 'False'
    outputs:
      y: {}
    function_ids:
      iIB: 25
    c_runtime: not support
    uniq_name: Mean_iIB
    id: 25
    func_type:
    - ALL
  Max:
    snake_name: max
    inputs:
      x: {}
    arguments:
      axes:
        type: repeated int64
        default: range(x.ndim)
      keep_dims:
        type: bool
        default: 'False'
      with_index:
        type: bool
        default: 'False'
      only_index:
        type: bool
        default: 'False'
    outputs:
      y: {}
    function_ids:
      iIB: 26
      iIBBB: 132
    c_runtime: not support
    uniq_name: Max_iIBBB
    id: 132
    func_type:
    - ALL
  Min:
    snake_name: min
    inputs:
      x: {}
    arguments:
      axes:
        type: repeated int64
        default: range(x.ndim)
      keep_dims:
        type: bool
        default: 'False'
      with_index:
        type: bool
        default: 'False'
      only_index:
        type: bool
        default: 'False'
    outputs:
      y: {}
    function_ids:
      iIB: 27
      iIBBB: 130
    c_runtime: not support
    uniq_name: Min_iIBBB
    id: 130
    func_type:
    - ALL
  Norm:
    snake_name: norm
    inputs:
      x: {}
    arguments:
      p:
        type: float
        default: 2
      axes:
        type: repeated int64
        default: range(x.ndim)
      keep_dims:
        type: bool
        default: 'False'
    outputs:
      y: {}
    c_runtime: not support
    function_ids:
      fiIB: 318
    uniq_name: Norm_fiIB
    id: 318
    func_type:
    - ALL
  Prod:
    snake_name: prod
    inputs:
      x: {}
    arguments:
      axes:
        type: repeated int64
        default: range(x.ndim)
      keep_dims:
        type: bool
        default: 'False'
    outputs:
      y: {}
    function_ids:
      iIB: 28
    c_runtime: not support
    uniq_name: Prod_iIB
    id: 28
    func_type:
    - ALL
  CumProd:
    snake_name: cumprod
    inputs:
      x: {}
    arguments:
      axis:
        type: int64
        default: 0
      exclusive:
        type: bool
        default: 'False'
      reverse:
        type: bool
        default: 'False'
    outputs:
      y: {}
    c_runtime: not support
    function_ids:
      iBB: 332
    uniq_name: CumProd_iBB
    id: 332
    func_type:
    - ALL
  ReduceSum:
    snake_name: reduce_sum
    inputs:
      x: {}
    outputs:
      y: {}
    function_ids:
      Empty: 29
    c_runtime: not support
    uniq_name: ReduceSum
    id: 29
    func_type:
    - ALL
  ReduceMean:
    snake_name: reduce_mean
    inputs:
      x: {}
    outputs:
      y: {}
    function_ids:
      Empty: 30
    c_runtime: not support
    uniq_name: ReduceMean
    id: 30
    func_type:
    - ALL
Arithmetic:
  Add2:
    snake_name: add2
    inputs:
      x0: {}
      x1: {}
    arguments:
      inplace:
        type: bool
        default: 'False'
    outputs:
      y: {}
    function_ids:
      B: 31
    c_runtime: support
    uniq_name: Add2_B
    id: 31
    func_type:
    - ALL
  AddN:
    snake_name: add_n
    inputs:
      x:
        variadic: true
    outputs:
      y: {}
    c_runtime: support
    function_ids:
      Empty: 281
    uniq_name: AddN
    id: 281
    func_type:
    - ALL
  BcAdd2:
    snake_name: bc_add2
    inputs:
      x0: {}
      x1: {}
    arguments:
      inplace:
        type: bool
        default: 'False'
    outputs:
      y: {}
    function_ids:
      Empty: 32
      B: 307
    c_runtime: not support
    uniq_name: BcAdd2_B
    id: 307
    func_type:
    - ALL
  Sub2:
    snake_name: sub2
    inputs:
      x0: {}
      x1: {}
    arguments:
      inplace:
        type: bool
        default: 'False'
    outputs:
      y: {}
    function_ids:
      Empty: 33
      B: 308
    c_runtime: support
    uniq_name: Sub2_B
    id: 308
    func_type:
    - ALL
  Mul2:
    snake_name: mul2
    inputs:
      x0: {}
      x1: {}
    arguments:
      inplace:
        type: bool
        default: 'False'
    outputs:
      y: {}
    function_ids:
      Empty: 34
      B: 309
    c_runtime: support
    uniq_name: Mul2_B
    id: 309
    func_type:
    - ALL
  MulN:
    snake_name: mul_n
    inputs:
      x:
        variadic: true
    outputs:
      y: {}
    c_runtime: support
    function_ids:
      Empty: 282
    uniq_name: MulN
    id: 282
    func_type:
    - ALL
  Div2:
    snake_name: div2
    inputs:
      x0: {}
      x1: {}
    arguments:
      inplace:
        type: bool
        default: 'False'
    outputs:
      y: {}
    function_ids:
      Empty: 35
      B: 310
    c_runtime: support
    uniq_name: Div2_B
    id: 310
    func_type:
    - ALL
  Pow2:
    snake_name: pow2
    inputs:
      x0: {}
      x1: {}
    arguments:
      inplace:
        type: bool
        default: 'False'
    outputs:
      y: {}
    function_ids:
      Empty: 36
      B: 311
    c_runtime: support
    uniq_name: Pow2_B
    id: 311
    func_type:
    - ALL
  AddScalar:
    snake_name: add_scalar
    inputs:
      x: {}
    arguments:
      val:
        type: double
        default: '1'
      inplace:
        type: bool
        default: 'False'
    outputs:
      y: {}
    function_ids:
      f: 37
      fB: 312
    c_runtime: support
    uniq_name: AddScalar_fB
    id: 312
    func_type:
    - ALL
  MulScalar:
    snake_name: mul_scalar
    inputs:
      x: {}
    arguments:
      val:
        type: double
        default: '1'
      inplace:
        type: bool
        default: 'False'
    outputs:
      y: {}
    function_ids:
      f: 38
      fB: 313
    c_runtime: support
    uniq_name: MulScalar_fB
    id: 313
    func_type:
    - ALL
  PowScalar:
    snake_name: pow_scalar
    inputs:
      x: {}
    arguments:
      val:
        type: double
        default: '1'
      inplace:
        type: bool
        default: 'False'
    outputs:
      y: {}
    function_ids:
      f: 39
      fB: 314
    c_runtime: support
    uniq_name: PowScalar_fB
    id: 314
    func_type:
    - ALL
  RSubScalar:
    snake_name: r_sub_scalar
    inputs:
      x: {}
    arguments:
      val:
        type: double
        default: '1'
    outputs:
      y: {}
    function_ids:
      f: 40
    c_runtime: support
    uniq_name: RSubScalar_f
    id: 40
    func_type:
    - ALL
  RDivScalar:
    snake_name: r_div_scalar
    inputs:
      x: {}
    arguments:
      val:
        type: double
        default: '1'
    outputs:
      y: {}
    function_ids:
      f: 41
    c_runtime: support
    uniq_name: RDivScalar_f
    id: 41
    func_type:
    - ALL
  RPowScalar:
    snake_name: r_pow_scalar
    inputs:
      x: {}
    arguments:
      val:
        type: double
        default: '1'
    outputs:
      y: {}
    function_ids:
      f: 42
    c_runtime: support
    uniq_name: RPowScalar_f
    id: 42
    func_type:
    - ALL
Logical:
  Sign:
    snake_name: sign
    inputs:
      x: {}
    arguments:
      alpha:
        type: float
        default: '1.0'
    outputs:
      y: {}
    function_ids:
      f: 43
    c_runtime: support
    uniq_name: Sign_f
    id: 43
    func_type:
    - ALL
  Minimum2:
    snake_name: minimum2
    inputs:
      x0: {}
      x1: {}
    outputs:
      y: {}
    function_ids:
      Empty: 44
    c_runtime: support
    uniq_name: Minimum2
    id: 44
    func_type:
    - ALL
  Maximum2:
    snake_name: maximum2
    inputs:
      x0: {}
      x1: {}
    outputs:
      y: {}
    function_ids:
      Empty: 45
    c_runtime: support
    uniq_name: Maximum2
    id: 45
    func_type:
    - ALL
  MinimumScalar:
    snake_name: minimum_scalar
    inputs:
      x: {}
    arguments:
      val:
        type: double
        default: '1.0'
    outputs:
      y: {}
    function_ids:
      f: 46
    c_runtime: support
    uniq_name: MinimumScalar_f
    id: 46
    func_type:
    - ALL
  MaximumScalar:
    snake_name: maximum_scalar
    inputs:
      x: {}
    arguments:
      val:
        type: double
        default: '1.0'
    outputs:
      y: {}
    function_ids:
      f: 47
    c_runtime: support
    uniq_name: MaximumScalar_f
    id: 47
    func_type:
    - ALL
  LogicalAnd:
    snake_name: logical_and
    inputs:
      x0: {}
      x1: {}
    outputs:
      y: {}
    function_ids:
      Empty: 48
    c_runtime: not support
    uniq_name: LogicalAnd
    id: 48
    func_type:
    - ALL
  LogicalOr:
    snake_name: logical_or
    inputs:
      x0: {}
      x1: {}
    outputs:
      y: {}
    function_ids:
      Empty: 49
    c_runtime: not support
    uniq_name: LogicalOr
    id: 49
    func_type:
    - ALL
  LogicalXor:
    snake_name: logical_xor
    inputs:
      x0: {}
      x1: {}
    outputs:
      y: {}
    function_ids:
      Empty: 50
    c_runtime: not support
    uniq_name: LogicalXor
    id: 50
    func_type:
    - ALL
  Equal:
    snake_name: equal
    inputs:
      x0: {}
      x1: {}
    outputs:
      y: {}
    function_ids:
      Empty: 51
    c_runtime: not support
    uniq_name: Equal
    id: 51
    func_type:
    - ALL
  NotEqual:
    snake_name: not_equal
    inputs:
      x0: {}
      x1: {}
    outputs:
      y: {}
    function_ids:
      Empty: 52
    c_runtime: not support
    uniq_name: NotEqual
    id: 52
    func_type:
    - ALL
  GreaterEqual:
    snake_name: greater_equal
    inputs:
      x0: {}
      x1: {}
    outputs:
      y: {}
    function_ids:
      Empty: 53
    c_runtime: not support
    uniq_name: GreaterEqual
    id: 53
    func_type:
    - ALL
  Greater:
    snake_name: greater
    inputs:
      x0: {}
      x1: {}
    outputs:
      y: {}
    function_ids:
      Empty: 54
    c_runtime: not support
    uniq_name: Greater
    id: 54
    func_type:
    - ALL
  LessEqual:
    snake_name: less_equal
    inputs:
      x0: {}
      x1: {}
    outputs:
      y: {}
    function_ids:
      Empty: 55
    c_runtime: not support
    uniq_name: LessEqual
    id: 55
    func_type:
    - ALL
  Less:
    snake_name: less
    inputs:
      x0: {}
      x1: {}
    outputs:
      y: {}
    function_ids:
      Empty: 56
    c_runtime: not support
    uniq_name: Less
    id: 56
    func_type:
    - ALL
  SearchSorted:
    snake_name: searchsorted
    inputs:
      sorted_sequence: {}
      values: {}
    arguments:
      right:
        type: bool
        default: false
    outputs:
      y: {}
    c_runtime: not support
    function_ids:
      B: 333
    uniq_name: SearchSorted_B
    id: 333
    func_type:
    - ALL
  LogicalAndScalar:
    snake_name: logical_and_scalar
    inputs:
      x0: {}
    arguments:
      val:
        type: bool
    outputs:
      y: {}
    function_ids:
      B: 57
    c_runtime: not support
    uniq_name: LogicalAndScalar_B
    id: 57
    func_type:
    - ALL
  LogicalOrScalar:
    snake_name: logical_or_scalar
    inputs:
      x0: {}
    arguments:
      val:
        type: bool
    outputs:
      y: {}
    function_ids:
      B: 58
    c_runtime: not support
    uniq_name: LogicalOrScalar_B
    id: 58
    func_type:
    - ALL
  LogicalXorScalar:
    snake_name: logical_xor_scalar
    inputs:
      x0: {}
    arguments:
      val:
        type: bool
    outputs:
      y: {}
    function_ids:
      B: 59
    c_runtime: not support
    uniq_name: LogicalXorScalar_B
    id: 59
    func_type:
    - ALL
  EqualScalar:
    snake_name: equal_scalar
    inputs:
      x0: {}
    arguments:
      val:
        type: double
        default: '1'
    outputs:
      y: {}
    function_ids:
      f: 60
    c_runtime: not support
    uniq_name: EqualScalar_f
    id: 60
    func_type:
    - ALL
  NotEqualScalar:
    snake_name: not_equal_scalar
    inputs:
      x0: {}
    arguments:
      val:
        type: double
        default: '1'
    outputs:
      y: {}
    function_ids:
      f: 61
    c_runtime: not support
    uniq_name: NotEqualScalar_f
    id: 61
    func_type:
    - ALL
  GreaterEqualScalar:
    snake_name: greater_equal_scalar
    inputs:
      x0: {}
    arguments:
      val:
        type: double
        default: '1'
    outputs:
      y: {}
    function_ids:
      f: 62
    c_runtime: not support
    uniq_name: GreaterEqualScalar_f
    id: 62
    func_type:
    - ALL
  GreaterScalar:
    snake_name: greater_scalar
    inputs:
      x0: {}
    arguments:
      val:
        type: double
        default: '1'
    outputs:
      y: {}
    function_ids:
      f: 63
    c_runtime: not support
    uniq_name: GreaterScalar_f
    id: 63
    func_type:
    - ALL
  LessEqualScalar:
    snake_name: less_equal_scalar
    inputs:
      x0: {}
    arguments:
      val:
        type: double
        default: '1'
    outputs:
      y: {}
    function_ids:
      f: 64
    c_runtime: not support
    uniq_name: LessEqualScalar_f
    id: 64
    func_type:
    - ALL
  LessScalar:
    snake_name: less_scalar
    inputs:
      x0: {}
    arguments:
      val:
        type: double
        default: '1'
    outputs:
      y: {}
    function_ids:
      f: 65
    c_runtime: not support
    uniq_name: LessScalar_f
    id: 65
    func_type:
    - ALL
  LogicalNot:
    snake_name: logical_not
    inputs:
      x0: {}
    outputs:
      y: {}
    function_ids:
      Empty: 66
    c_runtime: not support
    uniq_name: LogicalNot
    id: 66
    func_type:
    - ALL
  IsNaN:
    snake_name: isnan
    inputs:
      x0: {}
    outputs:
      y: {}
    function_ids:
      Empty: 236
    c_runtime: not support
    uniq_name: IsNaN
    id: 236
    func_type:
    - ALL
  IsInf:
    snake_name: isinf
    inputs:
      x0: {}
    outputs:
      y: {}
    function_ids:
      Empty: 237
    c_runtime: not support
    uniq_name: IsInf
    id: 237
    func_type:
    - ALL
  ResetNaN:
    snake_name: reset_nan
    inputs:
      x0: {}
    arguments:
      val:
        type: double
        default: '0'
    outputs:
      y: {}
    function_ids:
      f: 238
    c_runtime: not support
    uniq_name: ResetNaN_f
    id: 238
    func_type:
    - ALL
  ResetInf:
    snake_name: reset_inf
    inputs:
      x0: {}
    arguments:
      val:
        type: double
        default: '0'
    outputs:
      y: {}
    function_ids:
      f: 239
    c_runtime: not support
    uniq_name: ResetInf_f
    id: 239
    func_type:
    - ALL
  Where:
    snake_name: where
    inputs:
      condition: {}
      x_true: {}
      x_false: {}
    outputs:
      y: {}
    function_ids:
      Empty: 240
    c_runtime: not support
    uniq_name: Where
    id: 240
    func_type:
    - ALL
Math:
  Constant:
    snake_name: constant
    inputs: {}
    arguments:
      val:
        type: float
        default: '0'
      shape:
        type: Shape
        default: '[]'
    outputs:
      y: {}
    function_ids:
      fiI: 67
    c_runtime: not support
    uniq_name: Constant_fiI
    id: 67
    func_type:
    - ALL
  Arange:
    snake_name: arange
    inputs: {}
    arguments:
      start:
        type: float
      stop:
        type: float
      step:
        type: float
        default: '1'
    outputs:
      y: {}
    function_ids:
      fff: 131
    c_runtime: not support
    uniq_name: Arange_fff
    id: 131
    func_type:
    - ALL
  Linspace:
    snake_name: linspace
    inputs: {}
    arguments:
      start:
        type: float
      stop:
        type: float
      num:
        type: int64
    outputs:
      y: {}
    function_ids:
      ffi: 343
    c_runtime: not support
    uniq_name: Linspace_ffi
    id: 343
    func_type:
    - ALL
  Abs:
    snake_name: abs
    inputs:
      x: {}
    outputs:
      y: {}
    function_ids:
      Empty: 68
    c_runtime: support
    uniq_name: Abs
    id: 68
    func_type:
    - ALL
  Exp:
    snake_name: exp
    inputs:
      x: {}
    outputs:
      y: {}
    function_ids:
      Empty: 69
    c_runtime: support
    uniq_name: Exp
    id: 69
    func_type:
    - ALL
  Log:
    snake_name: log
    inputs:
      x: {}
    outputs:
      y: {}
    function_ids:
      Empty: 70
    c_runtime: support
    uniq_name: Log
    id: 70
    func_type:
    - ALL
  Identity:
    snake_name: identity
    inputs:
      x: {}
    outputs:
      y: {}
    function_ids:
      Empty: 71
    c_runtime: support
    uniq_name: Identity
    id: 71
    func_type:
    - ALL
  BatchMatmul:
    snake_name: batch_matmul
    inputs:
      a: {}
      b: {}
    arguments:
      transpose_a:
        type: bool
        default: 'False'
      transpose_b:
        type: bool
        default: 'False'
    outputs:
      y: {}
    function_ids:
      BB: 72
    c_runtime: support
    uniq_name: BatchMatmul_BB
    id: 72
    func_type:
    - ALL
  Round:
    snake_name: round
    inputs:
      x: {}
    arguments: {}
    outputs:
      y: {}
    function_ids:
      Empty: 73
    c_runtime: support
    uniq_name: Round_
    id: 73
    func_type:
    - ALL
  Ceil:
    snake_name: ceil
    inputs:
      x: {}
    arguments: {}
    outputs:
      y: {}
    function_ids:
      Empty: 124
    c_runtime: not support
    uniq_name: Ceil_
    id: 124
    func_type:
    - ALL
  Floor:
    snake_name: floor
    inputs:
      x: {}
    arguments: {}
    outputs:
      y: {}
    function_ids:
      Empty: 125
    c_runtime: not support
    uniq_name: Floor_
    id: 125
    func_type:
    - ALL
  Sin:
    snake_name: sin
    inputs:
      x: {}
    outputs:
      y: {}
    function_ids:
      Empty: 173
    c_runtime: not support
    uniq_name: Sin
    id: 173
    func_type:
    - ALL
  Cos:
    snake_name: cos
    inputs:
      x: {}
    outputs:
      y: {}
    function_ids:
      Empty: 174
    c_runtime: not support
    uniq_name: Cos
    id: 174
    func_type:
    - ALL
  Tan:
    snake_name: tan
    inputs:
      x: {}
    outputs:
      y: {}
    function_ids:
      Empty: 175
    c_runtime: not support
    uniq_name: Tan
    id: 175
    func_type:
    - ALL
  Sinh:
    snake_name: sinh
    inputs:
      x: {}
    outputs:
      y: {}
    function_ids:
      Empty: 176
    c_runtime: not support
    uniq_name: Sinh
    id: 176
    func_type:
    - ALL
  Cosh:
    snake_name: cosh
    inputs:
      x: {}
    outputs:
      y: {}
    function_ids:
      Empty: 177
    c_runtime: not support
    uniq_name: Cosh
    id: 177
    func_type:
    - ALL
  ASin:
    snake_name: asin
    inputs:
      x: {}
    outputs:
      y: {}
    function_ids:
      Empty: 178
    c_runtime: not support
    uniq_name: ASin
    id: 178
    func_type:
    - ALL
  ACos:
    snake_name: acos
    inputs:
      x: {}
    outputs:
      y: {}
    function_ids:
      Empty: 179
    c_runtime: not support
    uniq_name: ACos
    id: 179
    func_type:
    - ALL
  ATan:
    snake_name: atan
    inputs:
      x: {}
    outputs:
      y: {}
    function_ids:
      Empty: 180
    c_runtime: not support
    uniq_name: ATan
    id: 180
    func_type:
    - ALL
  ATan2:
    snake_name: atan2
    inputs:
      x0: {}
      x1: {}
    outputs:
      y: {}
    c_runtime: not support
    function_ids:
      Empty: 241
    uniq_name: ATan2
    id: 241
    func_type:
    - ALL
  ASinh:
    snake_name: asinh
    inputs:
      x: {}
    outputs:
      y: {}
    function_ids:
      Empty: 181
    c_runtime: not support
    uniq_name: ASinh
    id: 181
    func_type:
    - ALL
  ACosh:
    snake_name: acosh
    inputs:
      x: {}
    outputs:
      y: {}
    function_ids:
      Empty: 182
    c_runtime: not support
    uniq_name: ACosh
    id: 182
    func_type:
    - ALL
  ATanh:
    snake_name: atanh
    inputs:
      x: {}
    outputs:
      y: {}
    function_ids:
      Empty: 183
    c_runtime: not support
    uniq_name: ATanh
    id: 183
    func_type:
    - ALL
  Erf:
    snake_name: erf
    inputs:
      x: {}
    outputs:
      y: {}
    c_runtime: not support
    function_ids:
      Empty: 349
    uniq_name: Erf
    id: 349
    func_type:
    - ALL
Array Manipulation:
  Concatenate:
    snake_name: concatenate
    inputs:
      x:
        variadic: true
    arguments:
      axis:
        type: int64
        default: len(x[0].shape) - 1
    outputs:
      y: {}
    function_ids:
      i: 74
    c_runtime: support
    uniq_name: Concatenate_i
    id: 74
    func_type:
    - ALL
  Split:
    snake_name: split
    inputs:
      x: {}
    arguments:
      axis:
        type: int64
        default: '0'
    outputs:
      y:
        variadic: true
        parameter: true
    function_ids:
      i: 75
    c_runtime: support
    uniq_name: Split_i
    id: 75
    func_type:
    - ALL
  Stack:
    snake_name: stack
    inputs:
      x:
        variadic: true
    arguments:
      axis:
        type: int64
        default: '0'
    outputs:
      y: {}
    function_ids:
      i: 76
    c_runtime: support
    uniq_name: Stack_i
    id: 76
    func_type:
    - ALL
  Slice:
    snake_name: slice
    inputs:
      x: {}
    arguments:
      start:
        type: repeated int64
        default: (0,) * len(x.shape)
      stop:
        type: repeated int64
        default: tuple(x.shape)
      step:
        type: repeated int64
        default: (1,) * len(x.shape)
    outputs:
      y: {}
    function_ids:
      iIiIiI: 77
    c_runtime: support
    uniq_name: Slice_iIiIiI
    id: 77
    func_type:
    - ALL
  Pad:
    snake_name: pad
    inputs:
      x: {}
    arguments:
      pad_width:
        type: repeated int64
      mode:
        type: string
        available_values:
        - constant
        - reflect
        - repeat
        default: '''constant'''
      constant_value:
        type: float
        default: '0'
    outputs:
      y: {}
    function_ids:
      iIif: 123
    c_runtime: not support
    uniq_name: Pad_iIif
    id: 123
    func_type:
    - ALL
  Transpose:
    snake_name: transpose
    inputs:
      x: {}
    arguments:
      axes:
        type: repeated int64
    outputs:
      y: {}
    function_ids:
      iI: 78
    c_runtime: support
    uniq_name: Transpose_iI
    id: 78
    func_type:
    - ALL
  Broadcast:
    snake_name: broadcast
    inputs:
      x: {}
    arguments:
      shape:
        type: Shape
    outputs:
      y: {}
    function_ids:
      iI: 79
    c_runtime: not support
    uniq_name: Broadcast_iI
    id: 79
    func_type:
    - ALL
  BroadcastTo:
    snake_name: broadcast_to
    inputs:
      x: {}
      y: {}
    arguments:
      axis:
        type: int64
        default: -1
    outputs:
      z: {}
    function_ids:
      i: 184
    c_runtime: not support
    uniq_name: BroadcastTo_i
    id: 184
    func_type:
    - ALL
  Tile:
    snake_name: tile
    inputs:
      x: {}
    arguments:
      reps:
        type: repeated int64
    outputs:
      y: {}
    c_runtime: not support
    function_ids:
      iI: 247
    uniq_name: Tile_iI
    id: 247
    func_type:
    - ALL
  OneHot:
    snake_name: one_hot
    inputs:
      x:
        template: TI
    arguments:
      shape:
        type: Shape
    outputs:
      output: {}
    function_ids:
      iI: 80
    c_runtime: not support
    uniq_name: OneHot_iI
    id: 80
    func_type:
    - ALL
  Flip:
    snake_name: flip
    inputs:
      x: {}
    arguments:
      axes:
        type: repeated int64
        default: '[len(x.shape) - 1]'
    outputs:
      y: {}
    function_ids:
      iI: 81
    c_runtime: support
    uniq_name: Flip_iI
    id: 81
    func_type:
    - ALL
  Shift:
    snake_name: shift
    inputs:
      x: {}
    arguments:
      shifts:
        type: repeated int64
        default: (0,) * len(x.shape)
      border_mode:
        type: string
        available_values:
        - nearest
        - reflect
        default: '''nearest'''
    outputs:
      y: {}
    function_ids:
      iIi: 82
    c_runtime: support
    uniq_name: Shift_iIi
    id: 82
    func_type:
    - ALL
  Sort:
    snake_name: sort
    inputs:
      x: {}
    arguments:
      axis:
        type: int64
        default: '-1'
      reverse:
        type: bool
        default: 'False'
      with_index:
        type: bool
        default: 'False'
      only_index:
        type: bool
        default: 'False'
    outputs:
      y:
        variadic: true
        parameter: true
    function_ids:
      iBBB: 129
    c_runtime: not support
    uniq_name: Sort_iBBB
    id: 129
    func_type:
    - ALL
  Reshape:
    snake_name: reshape
    inputs:
      x: {}
    arguments:
      shape:
        type: Shape
      inplace:
        type: bool
        default: 'True'
    outputs:
      y: {}
    function_ids:
      iI: 83
      iIB: 126
    c_runtime: support
    uniq_name: Reshape_iIB
    id: 126
    func_type:
    - ALL
  Shape:
    snake_name: shape
    inputs:
      x: {}
    arguments:
      start:
        type: int64
        default: 0
      end:
        type: int64
        default: 0
    outputs:
      shape: {}
    c_runtime: not support
    function_ids:
      ii: 348
    uniq_name: Shape_ii
    id: 348
    func_type:
    - ALL
  MatrixDiag:
    snake_name: matrix_diag
    inputs:
      x: {}
    outputs:
      y: {}
    function_ids:
      Empty: 84
    c_runtime: support
    uniq_name: MatrixDiag
    id: 84
    func_type:
    - ALL
  MatrixDiagPart:
    snake_name: matrix_diag_part
    inputs:
      x: {}
    outputs:
      y: {}
    function_ids:
      Empty: 85
    c_runtime: support
    uniq_name: MatrixDiagPart
    id: 85
    func_type:
    - ALL
  Meshgrid:
    snake_name: meshgrid
    inputs:
      x:
        variadic: true
    arguments:
      ij_indexing:
        type: bool
        default: 'False'
    outputs:
      y:
        variadic: true
    c_runtime: not support
    function_ids:
      B: 334
    uniq_name: Meshgrid_B
    id: 334
    func_type:
    - ALL
  BatchDet:
    snake_name: batch_det
    inputs:
      x: {}
    outputs:
      y: {}
    c_runtime: not support
    function_ids:
      Empty: 276
    uniq_name: BatchDet
    id: 276
    func_type:
    - ALL
  BatchInv:
    snake_name: batch_inv
    inputs:
      x: {}
    outputs:
      y: {}
    c_runtime: not support
    function_ids:
      Empty: 275
    uniq_name: BatchInv
    id: 275
    func_type:
    - ALL
  BatchLogdet:
    snake_name: batch_logdet
    inputs:
      x: {}
    outputs:
      y: {}
    c_runtime: not support
    function_ids:
      Empty: 319
    uniq_name: BatchLogdet
    id: 319
    func_type:
    - ALL
  BatchCholesky:
    snake_name: batch_cholesky
    inputs:
      x: {}
    arguments:
      upper:
        type: bool
        default: 'False'
    outputs:
      y: {}
    c_runtime: not support
    function_ids:
      B: 347
    uniq_name: BatchCholesky_B
    id: 347
    func_type:
    - ALL
  Assign:
    snake_name: assign
    inputs:
      dst: {}
      src: {}
    outputs:
      y: {}
    c_runtime: not support
    function_ids:
      Empty: 248
    uniq_name: Assign
    id: 248
    func_type:
    - ALL
  Gather:
    snake_name: gather
    inputs:
      x: {}
      Indices: {}
    arguments:
      axis:
        type: int64
        default: 0
      batch_dims:
        type: int64
        default: 0
    outputs:
      y: {}
    c_runtime: not support
    function_ids:
      iiI: 302
      ii: 303
    uniq_name: Gather_ii
    id: 303
    func_type:
    - ALL
  GatherNd:
    snake_name: gather_nd
    inputs:
      x: {}
      indices: {}
    outputs:
      y: {}
    c_runtime: not support
    function_ids:
      Empty: 264
    uniq_name: GatherNd
    id: 264
    func_type:
    - ALL
  BoolGather:
    snake_name: bool_gather
    inputs:
      input: {}
      mask: {}
    outputs:
      output: {}
    c_runtime: not support
    function_ids:
      Empty: 339
    uniq_name: BoolGather
    id: 339
    func_type:
    - ALL
  ScatterNd:
    snake_name: scatter_nd
    inputs:
      data: {}
      indices: {}
      out:
        optional: true
    arguments:
      shape:
        type: repeated int64
        default: None
      add:
        type: bool
        default: 'False'
    outputs:
      y: {}
    c_runtime: not support
    function_ids:
      iI: 271
      iIB: 342
    uniq_name: ScatterNd_iIB
    id: 342
    func_type:
    - ALL
  ScatterAdd:
    snake_name: scatter_add
    inputs:
      x0: {}
      indices: {}
      x1: {}
    arguments:
      axis:
        type: int64
        default: 0
    outputs:
      y: {}
    c_runtime: not support
    function_ids:
      i: 315
    uniq_name: ScatterAdd_i
    id: 315
    func_type:
    - ALL
  BoolScatter:
    snake_name: bool_scatter
    inputs:
      input: {}
      mask: {}
      output:
        optional: true
    outputs:
      y: {}
    c_runtime: not support
    function_ids:
      Empty: 340
    uniq_name: BoolScatter
    id: 340
    func_type:
    - ALL
  BoolFill:
    snake_name: bool_fill
    inputs:
      data: {}
      mask: {}
    arguments:
      value:
        type: float
        default: '0'
    outputs:
      y: {}
    c_runtime: not support
    function_ids:
      f: 341
    uniq_name: BoolFill_f
    id: 341
    func_type:
    - ALL
  PackPaddedSequence:
    snake_name: pack_padded_sequence
    inputs:
      padded_sequence: {}
      lengths: {}
    arguments:
      batch_first:
        type: bool
        default: 'False'
    outputs:
      pack_sequence: {}
      batch_sizes: {}
    c_runtime: not support
    function_ids:
      B: 305
    uniq_name: PackPaddedSequence_B
    id: 305
    func_type:
    - ALL
  PadPackedSequence:
    snake_name: pad_packed_sequence
    inputs:
      packed_sequence: {}
      batch_sizes: {}
    arguments:
      batch_first:
        type: bool
        default: 'False'
      padding_value:
        type: float
        default: 0.0
      total_length:
        type: int64
        default: -1
    outputs:
      padded_sequence: {}
      lengths: {}
    c_runtime: not support
    function_ids:
      Bfi: 306
    uniq_name: PadPackedSequence_Bfi
    id: 306
    func_type:
    - ALL
  NonZero:
    snake_name: nonzero
    inputs:
      x: {}
    outputs:
      y: {}
    c_runtime: not support
    function_ids:
      Empty: 351
    uniq_name: NonZero
    id: 351
    func_type:
    - ALL
Signal Processing:
  Interpolate:
    snake_name: interpolate
    inputs:
      x: {}
    arguments:
      output_size:
        type: repeated int64
      mode:
        type: string
        available_values:
        - nearest
        - linear
      align_corners:
        type: bool
        default: 'True'
      half_pixel:
        type: bool
        default: 'False'
      half_pixel_for_nn:
        type: bool
        default: 'False'
      channel_last:
        type: bool
        default: 'False'
    outputs:
      y: {}
    function_ids:
      iIiB: 127
      iIiBB: 286
      iIiBBBB: 291
    c_runtime: not support
    uniq_name: Interpolate_iIiBBBB
    id: 291
    func_type:
    - ALL
  ONNXResize:
    snake_name: onnx_resize
    inputs:
      x: {}
    arguments:
      roi:
        type: repeated float
        default: ()
      scales:
        type: repeated float
        default: ()
      sizes:
        type: repeated int64
        default: ()
      mode:
        type: string
        available_values:
        - nearest
        - linear
        - cubic
        default: '''nearest'''
      coordinate_transformation_mode:
        type: string
        available_values:
        - half_pixel
        - pytorch_half_pixel
        - align_corners
        - asymmetric
        - tf_crop_and_resize
        default: '''half_pixel'''
      cubic_coeff_a:
        type: float
        default: -0.75
      exclude_outside:
        type: int64
        default: 0
      extrapolation_value:
        type: float
        default: 0.0
      nearest_mode:
        type: string
        available_values:
        - round_prefer_floor
        - round_prefer_ceil
        - floor
        - ceil
        default: '''round_prefer_floor'''
    outputs:
      y: {}
    c_runtime: not support
    function_ids:
      fFfFiIiififi: 352
    uniq_name: ONNXResize_fFfFiIiififi
    id: 352
    func_type:
    - ALL
  FFT:
    snake_name: fft
    inputs:
      x: {}
    arguments:
      signal_ndim:
        type: int64
      normalized:
        type: bool
        default: 'False'
    outputs:
      y: {}
    function_ids:
      iB: 158
    c_runtime: not support
    uniq_name: FFT_iB
    id: 158
    func_type:
    - ALL
  IFFT:
    snake_name: ifft
    inputs:
      x: {}
    arguments:
      signal_ndim:
        type: int64
      normalized:
        type: bool
        default: 'False'
    outputs:
      y: {}
    function_ids:
      iB: 159
    c_runtime: not support
    uniq_name: IFFT_iB
    id: 159
    func_type:
    - ALL
  STFT:
    snake_name: stft
    inputs:
      x: {}
    arguments:
      window_size:
        type: int64
      stride:
        type: int64
      fft_size:
        type: int64
      window_type:
        type: string
        available_values:
        - hanning
        - hamming
        - rectangular
        default: '''hanning'''
      center:
        type: bool
        default: 'True'
      pad_mode:
        type: string
        available_values:
        - constant
        - reflect
        default: '''reflect'''
      as_istft_backward:
        type: bool
        default: 'False'
    outputs:
      y_r: {}
      y_i: {}
    c_runtime: not support
    function_ids:
      iiiiBi: 327
      iiiiBiB: 344
    uniq_name: STFT_iiiiBiB
    id: 344
    func_type:
    - ALL
  ISTFT:
    snake_name: istft
    inputs:
      y_r: {}
      y_i: {}
    arguments:
      window_size:
        type: int64
      stride:
        type: int64
      fft_size:
        type: int64
      window_type:
        type: string
        available_values:
        - hanning
        - hamming
        - rectangular
        default: '''hanning'''
      center:
        type: bool
        default: 'True'
      pad_mode:
        type: string
        available_values:
        - constant
        - reflect
        default: '''reflect'''
      as_stft_backward:
        type: bool
        default: 'False'
    outputs:
      x: {}
    c_runtime: not support
    function_ids:
      iiiiB: 328
      iiiiBiB: 345
    uniq_name: ISTFT_iiiiBiB
    id: 345
    func_type:
    - ALL
Stochasticity:
  Dropout:
    snake_name: dropout
    inputs:
      x: {}
    arguments:
      p:
        type: double
        default: '0.5'
      seed:
        type: int64
        default: '-1'
    outputs:
      y: {}
    function_ids:
      fi: 86
      fiB: 336
    c_runtime: support
    uniq_name: Dropout_fi
    id: 336
    func_type:
    - ALL
  TopKData:
    snake_name: top_k_data
    inputs:
      x: {}
    arguments:
      k:
        type: int64
      abs:
        type: bool
        default: 'False'
      reduce:
        type: bool
        default: 'True'
      base_axis:
        type: int64
        default: '1'
      largest:
        type: bool
        default: 'True'
      with_index:
        type: bool
        default: 'False'
    outputs:
      y: {}
      indices: {}
    function_ids:
      iBBi: 87
      iBBiBB: 350
    c_runtime: not support
    uniq_name: TopKData_iBBiBB
    id: 350
    func_type:
    - ALL
  TopKGrad:
    snake_name: top_k_grad
    inputs:
      x: {}
    arguments:
      k:
        type: int64
      abs:
        type: bool
        default: 'False'
      base_axis:
        type: int64
        default: '1'
    outputs:
      y: {}
    function_ids:
      iBi: 88
    c_runtime: not support
    uniq_name: TopKGrad_iBi
    id: 88
    func_type:
    - ALL
  Rand:
    snake_name: rand
    inputs: {}
    arguments:
      low:
        type: float
        default: '0'
      high:
        type: float
        default: '1'
      shape:
        type: Shape
        default: '[]'
      seed:
        type: int64
        default: '-1'
    outputs:
      y: {}
    function_ids:
      ffiIi: 89
    c_runtime: not support
    uniq_name: Rand_ffiIi
    id: 89
    func_type:
    - ALL
  Randint:
    snake_name: randint
    inputs: {}
    arguments:
      low:
        type: int64
        default: '0'
      high:
        type: int64
        default: '1'
      shape:
        type: Shape
        default: '[]'
      seed:
        type: int64
        default: '-1'
    outputs:
      y:
        template: TI
    function_ids:
      iiiIi: 90
    c_runtime: not support
    uniq_name: Randint_iiiIi
    id: 90
    func_type:
    - ALL
  Randn:
    snake_name: randn
    inputs: {}
    arguments:
      mu:
        type: float
        default: '0'
      sigma:
        type: float
        default: '1'
      shape:
        type: Shape
        default: '[]'
      seed:
        type: int64
        default: '-1'
    outputs:
      y: {}
    function_ids:
      ffiIi: 91
    c_runtime: not support
    uniq_name: Randn_ffiIi
    id: 91
    func_type:
    - ALL
  RandBinomial:
    snake_name: rand_binomial
    inputs: {}
    arguments:
      n:
        type: int64
        default: '1'
      p:
        type: float
        default: '0.5'
      shape:
        type: Shape
        default: '[]'
      seed:
        type: int64
        default: '-1'
    outputs:
      y: {}
    function_ids:
      ifiIi: 289
    c_runtime: not support
    uniq_name: RandBinomial_ifiIi
    id: 289
    func_type:
    - ALL
  RandBeta:
    snake_name: rand_beta
    inputs: {}
    arguments:
      alpha:
        type: float
        default: '0.5'
      beta:
        type: float
        default: '0.5'
      shape:
        type: Shape
        default: '[]'
      seed:
        type: int64
        default: '-1'
    outputs:
      y: {}
    function_ids:
      ffiIi: 288
    c_runtime: not support
    uniq_name: RandBeta_ffiIi
    id: 288
    func_type:
    - ALL
  RandGamma:
    snake_name: rand_gamma
    inputs: {}
    arguments:
      k:
        type: float
        default: '0.5'
      theta:
        type: float
        default: '1'
      shape:
        type: Shape
        default: '[]'
      seed:
        type: int64
        default: '-1'
    outputs:
      y: {}
    function_ids:
      ffiIi: 290
    c_runtime: not support
    uniq_name: RandGamma_ffiIi
    id: 290
    func_type:
    - ALL
  RandomChoice:
    snake_name: random_choice
    inputs:
      x: {}
      w: {}
    arguments:
      shape:
        type: Shape
        default: '[]'
      replace:
        type: bool
        default: 'True'
      seed:
        type: int64
        default: '-1'
    outputs:
      y: {}
    c_runtime: not support
    function_ids:
      iIBi: 246
    uniq_name: RandomChoice_iIBi
    id: 246
    func_type:
    - ALL
  RandomCrop:
    snake_name: random_crop
    inputs:
      x: {}
    arguments:
      shape:
        type: Shape
        default: x.shape
      base_axis:
        type: int64
        default: '1'
      seed:
        type: int64
        default: '-1'
    outputs:
      y: {}
    function_ids:
      iIii: 92
    c_runtime: not support
    uniq_name: RandomCrop_iIii
    id: 92
    func_type:
    - ALL
  RandomFlip:
    snake_name: random_flip
    inputs:
      x: {}
    arguments:
      axes:
        type: repeated int64
        default: '[len(x.shape) - 1]'
      base_axis:
        type: int64
        default: '1'
      seed:
        type: int64
        default: '-1'
    outputs:
      y: {}
    function_ids:
      iIii: 93
    c_runtime: not support
    uniq_name: RandomFlip_iIii
    id: 93
    func_type:
    - ALL
  RandomShift:
    snake_name: random_shift
    inputs:
      x: {}
    arguments:
      shifts:
        type: repeated int64
        default: (0,) * len(x.shape)
      border_mode:
        type: string
        available_values:
        - nearest
        - reflect
        - constant
        default: '''nearest'''
      constant_value:
        type: float
        default: '0'
      base_axis:
        type: int64
        default: '1'
      seed:
        type: int64
        default: '-1'
    outputs:
      y: {}
    function_ids:
      iIiii: 94
      iIifii: 320
    c_runtime: not support
    uniq_name: RandomShift_iIifii
    id: 320
    func_type:
    - ALL
  RandomErase:
    snake_name: random_erase
    inputs:
      x: {}
    arguments:
      prob:
        type: float
        default: '0.5'
      area_ratios:
        type: repeated float
        default: (0.02, 0.4)
      aspect_ratios:
        type: repeated float
        default: (0.3, 3.3333)
      replacements:
        type: repeated float
        default: (0.0, 255.0)
      n:
        type: int64
        default: 1
      share:
        type: bool
        default: 'True'
      inplace:
        type: bool
        default: 'False'
      base_axis:
        type: int64
        default: '1'
      seed:
        type: int64
        default: '-1'
      channel_last:
        type: bool
        default: 'False'
      ste_fine_grained:
        type: bool
        default: 'True'
    outputs:
      y: {}
    c_runtime: not support
    function_ids:
      ffFfFiBfFBiiB: 283
      ffFfFfFiBBiiB: 284
      ffFfFfFiBBiiBB: 285
    uniq_name: RandomErase_ffFfFfFiBBiiBB
    id: 285
    func_type:
    - ALL
  ImageAugmentation:
    snake_name: image_augmentation
    inputs:
      x: {}
    arguments:
      shape:
        type: Shape
        default: x.shape
      pad:
        type: Shape
        default: (0, 0)
      min_scale:
        type: float
        default: '1.0'
      max_scale:
        type: float
        default: '1.0'
      angle:
        type: float
        default: '0.0'
      aspect_ratio:
        type: float
        default: '1.0'
      distortion:
        type: float
        default: '0.0'
      flip_lr:
        type: bool
        default: 'False'
      flip_ud:
        type: bool
        default: 'False'
      brightness:
        type: float
        default: '0.0'
      brightness_each:
        type: bool
        default: 'False'
      contrast:
        type: float
        default: '1.0'
      contrast_center:
        type: float
        default: '0.0'
      contrast_each:
        type: bool
        default: 'False'
      noise:
        type: float
        default: '0.0'
      seed:
        type: int64
        default: '-1'
    outputs:
      y: {}
    function_ids:
      iIiIfffffBBfBffBfi: 95
    c_runtime: not support
    uniq_name: ImageAugmentation_iIiIfffffBBfBffBfi
    id: 95
    func_type:
    - ALL
Loss Functions:
  SigmoidCrossEntropy:
    snake_name: sigmoid_cross_entropy
    inputs:
      x:
        parameter: true
      target:
        template: TI
        parameter: true
    outputs:
      y: {}
    function_ids:
      Empty: 96
    c_runtime: not support
    uniq_name: SigmoidCrossEntropy
    id: 96
    func_type:
    - ALL
  BinaryCrossEntropy:
    snake_name: binary_cross_entropy
    inputs:
      x: {}
      target: {}
    outputs:
      y: {}
    function_ids:
      Empty: 97
    c_runtime: not support
    uniq_name: BinaryCrossEntropy
    id: 97
    func_type:
    - ALL
  SoftmaxCrossEntropy:
    snake_name: softmax_cross_entropy
    inputs:
      x:
        parameter: true
      target:
        template: TI
        parameter: true
    arguments:
      axis:
        type: int64
        default: len(x.shape) - 1
    outputs:
      y: {}
    function_ids:
      i: 98
    c_runtime: not support
    uniq_name: SoftmaxCrossEntropy_i
    id: 98
    func_type:
    - ALL
  CategoricalCrossEntropy:
    snake_name: categorical_cross_entropy
    inputs:
      x:
        parameter: true
      target:
        template: TI
        parameter: true
    arguments:
      axis:
        type: int64
        default: len(x.shape) - 1
    outputs:
      y: {}
    function_ids:
      i: 99
    c_runtime: not support
    uniq_name: CategoricalCrossEntropy_i
    id: 99
    func_type:
    - ALL
  SquaredError:
    snake_name: squared_error
    inputs:
      x0: {}
      x1: {}
    outputs:
      y: {}
    function_ids:
      Empty: 100
    c_runtime: not support
    uniq_name: SquaredError
    id: 100
    func_type:
    - ALL
  AbsoluteError:
    snake_name: absolute_error
    inputs:
      x0: {}
      x1: {}
    outputs:
      y: {}
    function_ids:
      Empty: 101
    c_runtime: not support
    uniq_name: AbsoluteError
    id: 101
    func_type:
    - ALL
  HuberLoss:
    snake_name: huber_loss
    inputs:
      x0: {}
      x1: {}
    arguments:
      delta:
        type: float
        default: '1.0'
    outputs:
      y: {}
    function_ids:
      f: 102
    c_runtime: not support
    uniq_name: HuberLoss_f
    id: 102
    func_type:
    - ALL
  EpsilonInsensitiveLoss:
    snake_name: epsilon_insensitive_loss
    inputs:
      x0: {}
      x1: {}
    arguments:
      epsilon:
        type: float
    outputs:
      y: {}
    function_ids:
      f: 103
    c_runtime: not support
    uniq_name: EpsilonInsensitiveLoss_f
    id: 103
    func_type:
    - ALL
  KLMultinomial:
    snake_name: kl_multinomial
    inputs:
      p: {}
      q: {}
    arguments:
      base_axis:
        type: int64
        default: '1'
    outputs:
      D: {}
    function_ids:
      i: 104
    c_runtime: not support
    uniq_name: KLMultinomial_i
    id: 104
    func_type:
    - ALL
Geometric Neural Network Layers:
  AffineGrid:
    snake_name: affine_grid
    inputs:
      theta: {}
    arguments:
      size:
        type: repeated int64
      align_corners:
        type: bool
        default: 'False'
    outputs:
      grid: {}
    c_runtime: not support
    function_ids:
      iIB: 296
    uniq_name: AffineGrid_iIB
    id: 296
    func_type:
    - ALL
  WarpByGrid:
    snake_name: warp_by_grid
    inputs:
      x: {}
      grid: {}
    arguments:
      mode:
        type: string
        available_values:
        - linear
        - nearest
        default: '''linear'''
      padding_mode:
        type: string
        available_values:
        - zero
        - repeat
        - reflect
        default: '''zero'''
      align_corners:
        type: bool
        default: 'False'
      channel_last:
        type: bool
        default: 'False'
    outputs:
      y: {}
    c_runtime: not support
    function_ids:
      iiBB: 297
    uniq_name: WarpByGrid_iiBB
    id: 297
    func_type:
    - ALL
  WarpByFlow:
    snake_name: warp_by_flow
    inputs:
      data: {}
      flow: {}
    outputs:
      warped_image: {}
    c_runtime: not support
    function_ids:
      Empty: 277
    uniq_name: WarpByFlow
    id: 277
    func_type:
    - ALL
Quantization Neural Network Layers:
  BinarySigmoid:
    snake_name: binary_sigmoid
    inputs:
      x: {}
    outputs:
      y: {}
    function_ids:
      Empty: 105
    c_runtime: support
    uniq_name: BinarySigmoid
    id: 105
    func_type:
    - ALL
  BinaryTanh:
    snake_name: binary_tanh
    inputs:
      x: {}
    outputs:
      y: {}
    function_ids:
      Empty: 106
    c_runtime: support
    uniq_name: BinaryTanh
    id: 106
    func_type:
    - ALL
  BinaryConnectAffine:
    snake_name: binary_connect_affine
    inputs:
      x: {}
      weight:
        parameter: true
      binary_weight:
        parameter: true
      bias:
        optional: true
        parameter: true
    arguments:
      base_axis:
        type: int64
        default: '1'
      quantize_zero_to:
        type: float
        default: '1.0'
    outputs:
      y: {}
    function_ids:
      i: 107
      if: 235
    c_runtime: support
    uniq_name: BinaryConnectAffine_if
    id: 235
    func_type:
    - ALL
  BinaryConnectConvolution:
    snake_name: binary_connect_convolution
    inputs:
      x: {}
      weight:
        parameter: true
      binary_weight:
        parameter: true
      bias:
        optional: true
        parameter: true
    arguments:
      base_axis:
        type: int64
        default: '1'
      pad:
        type: Shape
        default: (0,) * (len(x.shape) - (base_axis+1))
      stride:
        type: Shape
        default: (1,) * (len(x.shape) - (base_axis+1))
      dilation:
        type: Shape
        default: (1,) * (len(x.shape) - (base_axis+1))
      group:
        type: int64
        default: '1'
      quantize_zero_to:
        type: float
        default: '1.0'
    outputs:
      y: {}
    function_ids:
      iiIiIiIi: 108
      iiIiIiIif: 233
    c_runtime: support
    uniq_name: BinaryConnectConvolution_iiIiIiIif
    id: 233
    func_type:
    - ALL
  BinaryWeightAffine:
    snake_name: binary_weight_affine
    inputs:
      x: {}
      weight:
        parameter: true
      binary_weight:
        parameter: true
      alpha:
        parameter: true
      bias:
        optional: true
        parameter: true
    arguments:
      base_axis:
        type: int64
        default: '1'
      quantize_zero_to:
        type: float
        default: '1.0'
    outputs:
      y: {}
    function_ids:
      i: 109
      if: 234
    c_runtime: support
    uniq_name: BinaryWeightAffine_if
    id: 234
    func_type:
    - ALL
  BinaryWeightConvolution:
    snake_name: binary_weight_convolution
    inputs:
      x: {}
      weight:
        parameter: true
      binary_weight:
        parameter: true
      alpha:
        parameter: true
      bias:
        optional: true
        parameter: true
    arguments:
      base_axis:
        type: int64
        default: '1'
      pad:
        type: Shape
        default: (0,) * (len(x.shape) - (base_axis+1))
      stride:
        type: Shape
        default: (1,) * (len(x.shape) - (base_axis+1))
      dilation:
        type: Shape
        default: (1,) * (len(x.shape) - (base_axis+1))
      group:
        type: int64
        default: '1'
      quantize_zero_to:
        type: float
        default: '1.0'
    outputs:
      y: {}
    function_ids:
      iiIiIiIi: 110
      iiIiIiIif: 232
    c_runtime: support
    uniq_name: BinaryWeightConvolution_iiIiIiIif
    id: 232
    func_type:
    - ALL
  INQAffine:
    snake_name: inq_affine
    inputs:
      x: {}
      weight:
        parameter: true
      indicator_fixedweights:
        template: TI
        parameter: true
      bias:
        optional: true
        parameter: true
    arguments:
      base_axis:
        type: int64
        default: '1'
      num_bits:
        type: int64
        default: '4'
      inq_iterations:
        type: repeated int64
        default: ()
      selection_algorithm:
        type: string
        available_values:
        - largest_abs
        - random
        default: '''largest_abs'''
      seed:
        type: int64
        default: '-1'
    outputs:
      y: {}
    function_ids:
      iiiIii: 111
    c_runtime: not support
    uniq_name: INQAffine_iiiIii
    id: 111
    func_type:
    - ALL
  INQConvolution:
    snake_name: inq_convolution
    inputs:
      x: {}
      weight:
        parameter: true
      indicator_fixedweights:
        template: TI
        parameter: true
      bias:
        optional: true
        parameter: true
    arguments:
      base_axis:
        type: int64
        default: '1'
      pad:
        type: Shape
        default: (0,) * (len(x.shape) - (base_axis+1))
      stride:
        type: Shape
        default: (1,) * (len(x.shape) - (base_axis+1))
      dilation:
        type: Shape
        default: (1,) * (len(x.shape) - (base_axis+1))
      group:
        type: int64
        default: '1'
      num_bits:
        type: int64
        default: '4'
      inq_iterations:
        type: repeated int64
        default: ()
      selection_algorithm:
        type: string
        available_values:
        - largest_abs
        - random
        default: '''largest_abs'''
      seed:
        type: int64
        default: '-1'
    outputs:
      y: {}
    function_ids:
      iiIiIiIiiiIii: 112
    c_runtime: not support
    uniq_name: INQConvolution_iiIiIiIiiiIii
    id: 112
    func_type:
    - ALL
  FixedPointQuantize:
    snake_name: fixed_point_quantize
    inputs:
      x: {}
    arguments:
      sign:
        type: bool
        default: 'True'
      n:
        type: int64
        default: '8'
      delta:
        type: float
        default: '0.0625'
      ste_fine_grained:
        type: bool
        default: 'True'
    outputs:
      y: {}
    function_ids:
      BifB: 113
    c_runtime: not support
    uniq_name: FixedPointQuantize_BifB
    id: 113
    func_type:
    - ALL
  MinMaxQuantize:
    snake_name: min_max_quantize
    inputs:
      x: {}
      qr_min: {}
      qr_max: {}
      ql_min: {}
      ql_max: {}
    arguments:
      decay:
        type: float
        default: '0.999'
      x_min_max:
        type: bool
        default: 'False'
      ema:
        type: bool
        default: 'False'
      ste_fine_grained:
        type: bool
        default: 'True'
      eps:
        type: float
        default: '0.01'
    outputs:
      y: {}
    c_runtime: not support
    function_ids:
      fBBB: 273
      fBBBf: 274
    uniq_name: MinMaxQuantize_fBBBf
    id: 274
    func_type:
    - ALL
  Pow2Quantize:
    snake_name: pow2_quantize
    inputs:
      x: {}
    arguments:
      sign:
        type: bool
        default: 'True'
      with_zero:
        type: bool
        default: 'True'
      n:
        type: int64
        default: '8'
      m:
        type: int64
        default: '1'
      ste_fine_grained:
        type: bool
        default: 'True'
    outputs:
      y: {}
    function_ids:
      BBiiB: 114
    c_runtime: not support
    uniq_name: Pow2Quantize_BBiiB
    id: 114
    func_type:
    - ALL
  Prune:
    snake_name: prune
    inputs:
      x: {}
    arguments:
      rate:
        type: float
        default: '0.9'
    outputs:
      y: {}
    function_ids:
      f: 135
    c_runtime: not support
    uniq_name: Prune_f
    id: 135
    func_type:
    - ALL
  QuantizeLinear:
    snake_name: quantize_linear
    inputs:
      x: {}
      scale: {}
      zero_point: {}
    arguments:
      round_mode:
        type: string
        available_values:
        - HALF_AWAY_FROM_ZERO
        - HALF_TO_EVEN
        default: '''HALF_AWAY_FROM_ZERO'''
      narrow_range:
        type: bool
        default: 'False'
      dtype:
        type: int64
        default: '1'
    outputs:
      y: {}
    c_runtime: not support
    function_ids:
      iBi: 293
    uniq_name: QuantizeLinear_iBi
    id: 293
    func_type:
    - ALL
  DequantizeLinear:
    snake_name: dequantize_linear
    inputs:
      x: {}
      scale: {}
      zero_point: {}
    outputs:
      y: {}
    c_runtime: not support
    function_ids:
      Empty: 294
    uniq_name: DequantizeLinear
    id: 294
    func_type:
    - ALL
Validation:
  TopNError:
    snake_name: top_n_error
    inputs:
      x: {}
      target:
        template: TI
    arguments:
      axis:
        type: int64
        default: len(x.shape) - 1
      n:
        type: int64
        default: '1'
    outputs:
      output: {}
    function_ids:
      ii: 115
    c_runtime: not support
    uniq_name: TopNError_ii
    id: 115
    func_type:
    - ALL
  BinaryError:
    snake_name: binary_error
    inputs:
      x: {}
      target: {}
    outputs:
      output: {}
    function_ids:
      Empty: 116
    c_runtime: not support
    uniq_name: BinaryError
    id: 116
    func_type:
    - ALL
  ConfusionMatrix:
    snake_name: confusion_matrix
    inputs:
      x: {}
      target:
        template: TI
    arguments:
      axis:
        type: int64
        default: len(x.shape) - 1
    outputs:
      output: {}
    function_ids:
      i: 117
    c_runtime: not support
    uniq_name: ConfusionMatrix_i
    id: 117
    func_type:
    - ALL
Unsupported, Special Use:
  VATNoise:
    snake_name: vat_noise
    inputs:
      x: {}
      w: {}
    arguments:
      base_axis:
        type: int64
        default: '1'
      eps:
        type: float
        default: '1.0'
    outputs:
      y: {}
    function_ids:
      if: 118
    c_runtime: not support
    uniq_name: VATNoise_if
    id: 118
    func_type:
    - ALL
  Unlink:
    snake_name: unlink
    inputs:
      x: {}
    outputs:
      y: {}
    function_ids:
      Empty: 119
    c_runtime: not support
    uniq_name: Unlink
    id: 119
    func_type:
    - ALL
  Sink:
    snake_name: sink
    inputs:
      x:
        variadic: true
    arguments:
      one_input_grad:
        type: bool
        default: 'True'
    outputs:
      y: {}
    function_ids:
      B: 120
    c_runtime: not support
    uniq_name: Sink_B
    id: 120
    func_type:
    - ALL
  NmsDetection2d:
    snake_name: nms_detection2d
    inputs:
      x: {}
    arguments:
      thresh:
        type: float
        default: 0.5
      nms:
        type: float
        default: 0.45
      nms_per_class:
        type: bool
        default: true
    outputs:
      y: {}
    function_ids:
      ffB: 231
    c_runtime: not support
    uniq_name: NmsDetection2d_ffB
    id: 231
    func_type:
    - ALL
  ONNXNonMaxSuppression:
    snake_name: onnx_non_max_suppression
    inputs:
      boxes: {}
      scores: {}
    arguments:
      center_point_box:
        type: int64
        default: 0
      max_output_boxes_per_class:
        type: int64
        default: 0
      iou_threshold:
        type: float
        default: 0.0
      score_threshold:
        type: float
        default: 0.0
    outputs:
      y: {}
    c_runtime: not support
    function_ids:
      iiff: 353
    uniq_name: ONNXNonMaxSuppression_iiff
    id: 353
    func_type:
    - ALL
  MaxPoolingBackward:
    snake_name: max_pooling_backward
    inputs:
      dy: {}
      x: {}
    arguments:
      kernel:
        type: Shape
      stride:
        type: Shape
        default: kernel
      ignore_border:
        type: bool
        default: 'True'
      pad:
        type: Shape
        default: (0,) * len(kernel)
      channel_last:
        type: bool
        default: 'False'
    outputs:
      dx: {}
    c_runtime: not support
    function_ids:
      iIiIBiIB: 272
    uniq_name: MaxPoolingBackward_iIiIBiIB
    id: 272
    func_type:
    - ALL
  PatchCorrelation:
    snake_name: patch_correlation
    inputs:
      x1: {}
      x2: {}
    arguments:
      patch:
        type: Shape
        default: (1, 1)
      shift:
        type: Shape
        default: (0, 0)
      patch_step:
        type: Shape
        default: (1, 1)
      shift_step:
        type: Shape
        default: (1, 1)
      padding:
        type: Shape
        default: (0, 0, 0, 0)
    outputs:
      y: {}
    c_runtime: not support
    function_ids:
      iIiIiIiIiI: 280
    uniq_name: PatchCorrelation_iIiIiIiIiI
    id: 280
    func_type:
    - ALL
